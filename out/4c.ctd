#  == arr a: (length 6, dims 2) == 
# Comprobacion de rangos
    if (0 < 0) goto L0;
    if (3 < 0) goto L0;
    if (3 == 0) goto L0;
    goto L1;
L0:
    error;
    halt;
L1:
    t0 = 2 * 0;
    t0 = t0 + 0;
    a[t0] = 0;
# Comprobacion de rangos
    if (0 < 0) goto L2;
    if (3 < 0) goto L2;
    if (3 == 0) goto L2;
    goto L3;
L2:
    error;
    halt;
L3:
    t1 = 2 * 0;
    t1 = t1 + 1;
    a[t1] = 1;
# Comprobacion de rangos
    if (1 < 0) goto L4;
    if (3 < 1) goto L4;
    if (3 == 1) goto L4;
    goto L5;
L4:
    error;
    halt;
L5:
    t2 = 2 * 1;
    t2 = t2 + 0;
    a[t2] = 10;
# Comprobacion de rangos
    if (1 < 0) goto L6;
    if (3 < 1) goto L6;
    if (3 == 1) goto L6;
    goto L7;
L6:
    error;
    halt;
L7:
    t3 = 2 * 1;
    t3 = t3 + 1;
    a[t3] = 11;
# Comprobacion de rangos
    if (2 < 0) goto L8;
    if (3 < 2) goto L8;
    if (3 == 2) goto L8;
    goto L9;
L8:
    error;
    halt;
L9:
    t4 = 2 * 2;
    t4 = t4 + 0;
    a[t4] = 20;
# Comprobacion de rangos
    if (2 < 0) goto L10;
    if (3 < 2) goto L10;
    if (3 == 2) goto L10;
    goto L11;
L10:
    error;
    halt;
L11:
    t5 = 2 * 2;
    t5 = t5 + 1;
    a[t5] = 21;
# Comprobacion de rangos
    if (2 < 0) goto L12;
    if (3 < 2) goto L12;
    if (3 == 2) goto L12;
    goto L13;
L12:
    error;
    halt;
L13:
    t6 = 2 * 2;
    t6 = t6 + 1;
    t7 = a[t6];
# Comprobacion de rangos
    if (1 < 0) goto L14;
    if (3 < 1) goto L14;
    if (3 == 1) goto L14;
    goto L15;
L14:
    error;
    halt;
L15:
    t8 = 2 * 1;
    t8 = t8 + 1;
    t9 = a[t8];
    t10 = t7 * t9;
    print t10;
