#  == arr a: (length 6, dims 2) == 
    i = 1;
L0:
    if (i == 3) goto L2;
    goto L3;
L3:
    if (i < 3) goto L4;
    goto L5;
L2:
    goto L4;
L1:
    t0 = i + 1;
    i = t0;
    goto L0;
L4:
    j = 1;
L6:
    if (j == 2) goto L8;
    goto L9;
L9:
    if (j < 2) goto L10;
    goto L11;
L8:
    goto L10;
L7:
    t1 = j + 1;
    j = t1;
    goto L6;
L10:
    t2 = i - 1;
    t3 = j - 1;
    t4 = i - 1;
    t5 = 2 * t4;
    t6 = t5 + j;
# Comprobacion de rangos
    if (t2 < 0) goto L12;
    if (3 < t2) goto L12;
    if (3 == t2) goto L12;
    goto L13;
L12:
    error;
    halt;
L13:
    t7 = 2 * t2;
    t7 = t7 + t3;
    a[t7] = t6;
    goto L7;
L11:
    goto L1;
L5:
    factorial = 1;
    i = 1;
L14:
    if (i == 3) goto L16;
    goto L17;
L17:
    if (i < 3) goto L18;
    goto L19;
L16:
    goto L18;
L15:
    t8 = i + 1;
    i = t8;
    goto L14;
L18:
    j = 1;
L20:
    if (j == 2) goto L22;
    goto L23;
L23:
    if (j < 2) goto L24;
    goto L25;
L22:
    goto L24;
L21:
    t9 = j + 1;
    j = t9;
    goto L20;
L24:
    t10 = i - 1;
    t11 = j - 1;
# Comprobacion de rangos
    if (t10 < 0) goto L26;
    if (3 < t10) goto L26;
    if (3 == t10) goto L26;
    goto L27;
L26:
    error;
    halt;
L27:
    t12 = 2 * t10;
    t12 = t12 + t11;
    t13 = a[t12];
    t14 = factorial * t13;
    factorial = t14;
    goto L21;
L25:
    goto L15;
L19:
    print factorial;
